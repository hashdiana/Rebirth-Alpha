//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "G:\PortableSoft\JBY\MC_Deobf3000\1.12-MCP-Mappings"!

package me.rebirthclient.mod.modules.impl.exploit;

import java.util.Comparator;
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;
import me.rebirthclient.api.events.impl.PacketEvent;
import me.rebirthclient.mod.modules.Category;
import me.rebirthclient.mod.modules.Module;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityEnderPearl;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayer.Position;
import net.minecraft.network.play.server.SPacketSpawnObject;
import net.minecraftforge.fml.common.eventhandler.EventPriority;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class FakePearl extends Module {
   private final Queue<CPacketPlayer> packets = new ConcurrentLinkedQueue();
   private int thrownPearlId = -1;

   public FakePearl() {
      super("FakePearl", "Tçœ‰rkiye exploit", Category.EXPLOIT);
   }

   @Override
   public void onTick() {
      if (this.thrownPearlId != -1) {
         for(Entity entity : mc.world.loadedEntityList) {
            if (entity.getEntityId() == this.thrownPearlId && entity instanceof EntityEnderPearl) {
               EntityEnderPearl pearl = (EntityEnderPearl)entity;
               if (pearl.isDead) {
                  this.thrownPearlId = -1;
               }
            }
         }
      } else if (!this.packets.isEmpty()) {
         do {
            mc.player.connection.sendPacket((Packet)this.packets.poll());
         } while(!this.packets.isEmpty());
      }
   }

   @SubscribeEvent(
      priority = EventPriority.HIGHEST
   )
   public void onReceivePacket(PacketEvent.Receive event) {
      if (!fullNullCheck()) {
         if (!event.isCanceled()) {
            if (event.getPacket() instanceof SPacketSpawnObject) {
               SPacketSpawnObject packet = event.getPacket();
               if (packet.getType() == 65) {
                  mc.world
                     .playerEntities
                     .stream()
                     .min(Comparator.comparingDouble(p -> p.getDistance(packet.getX(), packet.getY(), packet.getZ())))
                     .ifPresent(
                        player -> {
                           if (player.equals(mc.player)) {
                              if (!mc.player.onGround) {
                                 return;
                              }
      
                              mc.player.motionX = 0.0;
                              mc.player.motionY = 0.0;
                              mc.player.motionZ = 0.0;
                              mc.player.movementInput.moveForward = 0.0F;
                              mc.player.movementInput.moveStrafe = 0.0F;
                              mc.player
                                 .connection
                                 .sendPacket(
                                    new Position(mc.player.posX, mc.player.posY + 1.0, mc.player.posZ, false)
                                 );
                              this.thrownPearlId = packet.getEntityID();
                           }
                        }
                     );
               }
            }
         }
      }
   }

   @SubscribeEvent
   public void onPacketSend(PacketEvent.Send event) {
      if (this.thrownPearlId != -1 && event.getPacket() instanceof CPacketPlayer) {
         CPacketPlayer packet = event.getPacket();
         this.packets.add(packet);
         event.setCanceled(true);
      }
   }
}
